@model IEnumerable<BRTF_Room_Booking_App.Models.RoomBooking>
@*For Cookies*@
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor
@{ ViewData["Title"] = "Bookings Index"; }
@using System.Globalization;
@using BRTF_Room_Booking_App.Models;
@using Syncfusion.EJ2.Schedule;


<head>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="~/css/site.css" />
    @*<link href='~/fullcalendar/main.css' rel='stylesheet' />*@
    <style type="text/css">
        .e-schedule:not(.e-device) .e-agenda-view .e-content-wrap table td:first-child {
            width: 90px;
        }

        .e-schedule .e-agenda-view .e-resource-column {
            width: 100px;
        }
    </style>


</head>
@if (TempData["AlertMessage"] != null)
{
    <br />
    <div class="alert alert-success">
        @Html.Raw(TempData["AlertMessage"])
    </div>
    <br />
}
@if (TempData["Message"] != null)
{
    <br />
    <div class="alert alert-success">
        <strong>@Html.Raw(TempData["Message"])</strong>
    </div>
    <br />
}
<body class="align-items-center justify-content-center">
    <br />
    <h1 class="mb-4 text-center">Bookings</h1>
    <br />
    <div class="container">
        <section style="background-color: #FFF; display: block; border-radius: 8px; box-shadow: 0 15px 25px rgba(0,0,50,0.2);" class="px-1 py-3 my-3 mx-auto">
            <h4 class="text-left">
                <a asp-action="Create" class="btn btn-primary mt-3" tabindex="1">Book a Room</a>
            </h4>
            <form asp-action="Index" method="get">
                <div class="control-section">
                    <div class="content-wrapper">
                        <ejs-schedule id="schedule" width="100%" height="650px" currentView="TimelineDay"
                                      selectedDate="DateTime.Now" workDays="@ViewBag.workDays"
                                      readonly="true" allowInline="false" allowDragAndDrop="false" allowResizing="false"
                                      eventClick="OnCellClick" popupOpen="onPopupOpen" dataBound="onDataBound" dateFormat="dd MMM yyyy" timeFormat="HH:mm">
                            <e-schedule-views>
                                <e-schedule-view option="TimelineDay"></e-schedule-view>
                            </e-schedule-views>
                            <e-schedule-group resources="@ViewBag.Resources"></e-schedule-group>
                            <e-schedule-resources>
                                <e-schedule-resource dataSource="@ViewBag.Areas" field="AreaId" title="Choose Area" name="Areas" textField="text" idField="id" colorField="color"></e-schedule-resource>
                                <e-schedule-resource dataSource="@ViewBag.Rooms" field="RoomId" title="Room" name="Rooms" textField="text" idField="id" groupIDField='groupId' colorField="color" allowMultiple="true"></e-schedule-resource>
                            </e-schedule-resources>
                            <e-schedule-workhours highlight="true" start="00:01" end="23:59"></e-schedule-workhours>
                            <e-schedule-eventsettings dataSource="@ViewBag.datasource" allowAdding="false" allowDeleting="false" allowEditing="false">
                                <e-eventsettings-fields>
                                    <e-field-subject name="Subject" title="Summary"></e-field-subject>
                                    <e-field-starttime name="StartTime" title="StartTime"></e-field-starttime>
                                    <e-field-endtime name="EndTime" title="EndTime"></e-field-endtime>
                                    <e-field-description name="SpecialNotes" title="SpecialNotes"></e-field-description>
                                </e-eventsettings-fields>
                            </e-schedule-eventsettings>
                        </ejs-schedule>
                    </div>
                </div>
                <br />

                <input type="hidden" name="sortDirection" value="@ViewData["sortDirection"]" />
                <input type="hidden" name="sortField" value="@ViewData["sortField"]" />
                <div class="form-horizontal align-items-start text-left justify-content-start mt-3">
                    <button tabindex="1" class="btn @(ViewData["Filtering"]) mb-3" type="button" data-toggle="collapse" id="filterToggle" data-target="#collapseFilter" aria-expanded="false" aria-controls="collapseFilter">
                        <text class="d-none d-lg-inline">Filter/Search</text><text class="d-inline d-lg-none">Filter/Sort</text>
                    </button>
                    <div class="collapse mb-3" id="collapseFilter" style="margin-bottom:20px;">
                        <div class="card card-body bg-light">
                            <div class="d-block d-lg-none">
                                <div class="form-group">
                                    <label class="control-label">Sort By:</label>
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">
                                                <input type="checkbox" class="" value="desc" tabindex="2"
                                                       @((ViewData["sortDirection"].ToString() != "asc" ? "checked=\"checked\"" : ""))
                                                       name="sortDirectionCheck" />&nbsp;&nbsp;Descending
                                            </div>
                                        </div>
                                        <select name="sortFieldID" class="form-control" asp-items="ViewBag.sortFieldID" tabindex="3"></select>
                                    </div>
                                </div>
                            </div>

                            <div class="row">
                                <div class="form-group col-md-4">
                                    <label class="control-label">Search After Date:</label>
                                    @Html.TextBox("SearchAfterDate", null, new { @class = "form-control", @type = "date", @tabindex = "4" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Search Before Date:</label>
                                    @Html.TextBox("SearchBeforeDate", null, new { @class = "form-control", @type = "date", @tabindex = "5" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Search Username:</label>
                                    @Html.TextBox("SearchUserName", null, new { @class = "form-control", @tabindex = "6" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Search User's Full Name:</label>
                                    @Html.TextBox("SearchFullName", null, new { @class = "form-control", @tabindex = "7" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Search by Area:</label>
                                    @Html.DropDownList("AreaID", null, "All Areas", htmlAttributes: new { @class = "form-control", @tabindex = "8" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Search by Room:</label>
                                    @Html.DropDownList("RoomID", null, "Select an Area first", htmlAttributes: new { @class = "form-control", @tabindex = "9" })
                                </div>
                                <div class="form-group col-md-4">
                                    <label class="control-label">Search by Approval Status:</label>
                                    @Html.DropDownList("SearchApprovalStatus", new List<SelectListItem>
                                    {
                                        new SelectListItem { Text="Approved & Pending", Value=""},
                                        new SelectListItem { Text="Approved Only", Value="Approved"},
                                        new SelectListItem { Text="Pending Only", Value="Pending"},
                                        new SelectListItem { Text="Declined Only", Value="Declined"},
                                        new SelectListItem { Text="All Statuses", Value="All"}
                                    }, htmlAttributes: new { @class = "form-control", @tabindex = "10" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="form-group col-md-4 align-self-end">
                                    <input type="submit" name="actionButton" value="Apply" class="btn btn-outline-primary" tabindex="11" />
                                    <a asp-action="Index" class="btn btn-outline-dark" tabindex="12">Clear</a>
                                </div>
                            </div>
                        </div>
                    </div>
                    @if (User.IsInRole("Admin") || User.IsInRole("Top-level Admin"))
                    {
                        <button class="btn btn-outline-secondary ml-2 mb-3" type="button" onclick="pageSize()" tabindex="13">
                            View All Bookings
                        </button>
                    }
                    <a role="button" class="btn btn-outline-secondary ml-2 mb-3" asp-area="" asp-controller="Home" asp-action="UsersBookings" asp-route-id="" tabindex="14">Your Bookings</a>
                </div>

                <div class="container-fluid d-block d-lg-none">
                    <div class="card-deck-wrapper">
                        <div class="card-deck">
                            @foreach (var item in Model)
                            {
                                <div class="card mb-sm-3" style="min-width: 18rem;">
                                    <h5 class="card-header">@Html.DisplayFor(modelItem => item.User.FullName)</h5>
                                    <div class="card-body">
                                        <div class="media-body ml-2">
                                            <div class="card-text mb-3">
                                                <strong>Start: </strong>
                                                @if ((string)ViewData["24HrFormat"] == "true")
                                                {
                                                    @item.RoundedStartDate.ToString("dd MMM yyyy HH:mm")
                                                }
                                                else
                                                {
                                                    var date = item.RoundedStartDate.ToString("dd MMM yyyy");
                                                    var time = item.RoundedStartDate.ToString("hh:mm tt", new System.Globalization.CultureInfo("en-US"));
                                                    var dateTime = string.Format("{0} {1}", date, time);

                                                    @dateTime
                                                }
                                            </div>
                                            <div class="card-text mb-3">
                                                <strong>End: </strong>
                                                @if ((string)ViewData["24HrFormat"] == "true")
                                                {
                                                    @item.RoundedEndDate.ToString("dd MMM yyyy HH:mm")
                                                }
                                                else
                                                {
                                                    var date = item.RoundedEndDate.ToString("dd MMM yyyy");
                                                    var time = item.RoundedEndDate.ToString("hh:mm tt", new System.Globalization.CultureInfo("en-US"));
                                                    var dateTime = string.Format("{0} {1}", date, time);

                                                    @dateTime
                                                }
                                            </div>
                                            <div class="card-text mb-2"><strong>Room:</strong> @Html.DisplayFor(modelItem => item.Room.RoomName)</div>
                                            <div class="card-text"><strong>User:</strong> @Html.DisplayFor(modelItem => item.User.FullName)</div>
                                            <br />
                                        </div>
                                        <div class="card-footer d-flex justify-content-center">
                                            @{ int userID = Convert.ToInt32(HttpContextAccessor.HttpContext.Request.Cookies["userID"]);}
                                            @if ((userID == item.UserID) || (User.IsInRole("Admin") || User.IsInRole("Top-level Admin")))
                                            {
                                                <a asp-action="Edit" asp-route-id="@item.ID" role="button" class="btn mx-1" style="width:75px; background:#2F7DBB; color:#E4E6E6; font-weight:400;" tabindex="15">Edit</a>
                                                <a asp-action="Delete" asp-route-id="@item.ID" role="button" class="btn mx-1" style="width:75px; background:#2F7DBB; color:#E4E6E6; font-weight:400;" tabindex="15">Delete</a>
                                            }
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    </div>
                </div>
                <table class="table d-none d-lg-table">
                    <thead>
                        <tr>
                            <th>
                                <button type="submit" class="btn btn-link" name="actionButton" value="Start Date" tabindex="16"><b>Date</b></button>
                            </th>
                            <th>
                                <button type="submit" class="btn btn-link" disabled style="color:black"><b>Time</b></button>
                            </th>
                            <th>
                                <button type="submit" class="btn btn-link" disabled style="color:black"><b>Room</b></button>
                            </th>
                            <th>
                                <button type="submit" class="btn btn-link" disabled style="color:black"><b>User</b></button>
                            </th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Convert.ToDateTime(item.StartDate).ToString("dd MMM yyyy")
                                </td>
                                <td>
                                    @if ((string)ViewData["24HrFormat"] == "true")
                                    {
                                        var start = item.RoundedStartDate.ToString("HH:mm");
                                        var end = item.RoundedEndDate.ToString("HH:mm");
                                        var times = string.Format("{0} - {1}", start, end);

                                        @times

                                    }
                                    else
                                    {
                                        var start = item.RoundedStartDate.ToString("hh:mm tt", new System.Globalization.CultureInfo("en-US"));
                                        var end = item.RoundedEndDate.ToString("hh:mm tt", new System.Globalization.CultureInfo("en-US"));
                                        var times = string.Format("{0} - {1}", start, end);

                                        @times
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Room.RoomName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.User.FullName)
                                </td>
                                <td style="width: 310px">
                                    @{ int userID = Convert.ToInt32(HttpContextAccessor.HttpContext.Request.Cookies["userID"]);}
                                    @if ((userID == item.UserID) || (User.IsInRole("Admin") || User.IsInRole("Top-level Admin")))
                                    {
                                        <a asp-action="Edit" asp-route-id="@item.ID" role="button" class="btn mx-2" style="width:75px; background:#2F7DBB; color:#E4E6E6; font-weight:400;" tabindex="17">Edit</a>
                                        <a asp-action="Delete" asp-route-id="@item.ID" role="button" class="btn mx-2" style="width:75px; background:#2F7DBB; color:#E4E6E6; font-weight:400;" tabindex="17">Delete</a>
                                    }
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
                @if (User.IsInRole("Top-level Admin"))
                {
                    <input tabindex="18" onclick="$('#bulkDeleteModal').modal('show');" value="Delete Filtered Bookings" class="btn btn-danger mx-2 float-right" style="cursor: pointer;" readonly />
                    <div class="modal fade" id="bulkDeleteModal" aria-labelledby="bulkDeleteModalLabel" aria-hidden="true">
                        <div class="modal-dialog modal-lg">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="bulkDeleteModalLabel">@Html.Raw(ViewBag.BulkDeleteMessageTitle)</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">&times;</span>
                                    </button>
                                </div>
                                <div id="bulkDeleteModalBody" class="modal-body">
                                    @Html.Raw(ViewBag.BulkDeleteMessageBody)
                                    @Html.ListBox("bookingsToBulkDelete", (MultiSelectList)ViewBag.selOpts,
                                        new { @size = 10, @class = "form-control", @style = "height:90%; display:none;" })
                                    @* display:none; Hides the above listbox. If you are debugging bulk deletion, you should remove this style to Show the listbox. *@
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-secondary" data-dismiss="modal" tabindex="19">Cancel</button>
                                    <input onclick="$('#bookingsToBulkDelete option').prop('selected', true);" type="submit" name="actionButton" value="Delete Bookings" class="btn btn-danger mx-2" tabindex="20"/>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <partial name="_PagingNavBar" />
            </form>
        </section>
    </div>
</body>

@section Scripts {
    <script src="~/js/refreshDDL.js"></script>
    @*<script type="text/javascript">
        // When page loads, match the datepicker of the calendar view to the start date of the filter
        $('document').ready(function () {
            $("#calendarDatePicker").val($("#SearchAfterDate").val());
            refreshCalendar();
        });
    </script>*@
    <script type="text/javascript">
        // Refresh DDL of available rooms when Area is changed
        $('#AreaID').change(function () {
            var selectedArea = $("#AreaID").val();
            var URL = "/RoomBookings/GetRooms/" + selectedArea;
            refreshDDL('RoomID', URL, true, "All Rooms", true, "All Rooms", true);
        });
    </script>
    <script>
        function pageSize() {
            document.cookie = "RoomBookingspageSizeValue=10000";
            location.reload();
        }
    </script>

    <script>
        function OnCellClick() {
            var schObj = document.getElementById('schedule').ej2_instances[0];
            console.log(schObj.activeEventData);
            var bookingID = schObj.activeEventData.event.Id;
            console.log(bookingID);

            window.location.href = '/RoomBookings/Details/' + bookingID;
        }

        function onPopupOpen(args) {
            args.cancel = true;
        }

        function onDataBound() {
            console.log("test");
            var schObj = document.getElementById('schedule').ej2_instances[0];
            let currTime = new Date();
            let hours =
                currTime.getHours() < 10
                    ? "0" + currTime.getHours().toString()
                    : currTime.getHours().toString();
            let minutes = currTime.getMinutes().toString();
            let time = hours + ":" + minutes;
            schObj.scrollTo(time);
        }

        function getDateHeaderText(props) {
            return this.instance.formatDate(props.date, { skeleton: 'dd MMM yyyy' });
        }


    </script>

}
